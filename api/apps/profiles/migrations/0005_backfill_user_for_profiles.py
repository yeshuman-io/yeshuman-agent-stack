# Generated by Django 5.2.5 on 2025-10-30 03:20

from django.db import migrations
from django.contrib.auth import get_user_model


def backfill_users_for_profiles(apps, schema_editor):
    """Backfill User relationships for existing Profiles."""
    Profile = apps.get_model('profiles', 'Profile')
    User = apps.get_model('accounts', 'User')

    # Get all profiles that don't have users yet
    profiles_without_users = Profile.objects.filter(user__isnull=True)

    for profile in profiles_without_users:
        # Try to find existing user by email
        user = User.objects.filter(email=profile.email).first()

        if not user:
            # Create new user
            # Derive username from email (take part before @)
            username = profile.email.split('@')[0]
            # Ensure username is unique
            base_username = username
            counter = 1
            while User.objects.filter(username=username).exists():
                username = f"{base_username}_{counter}"
                counter += 1

            user = User.objects.create_user(
                username=username,
                email=profile.email,
                password='abc',
                first_name=profile.first_name,
                last_name=profile.last_name
            )

        # Link profile to user
        profile.user = user
        profile.save(update_fields=['user'])


def reverse_backfill_users_for_profiles(apps, schema_editor):
    """Reverse migration - unlink all profiles from users."""
    Profile = apps.get_model('profiles', 'Profile')

    # Unlink all profiles from users
    Profile.objects.filter(user__isnull=False).update(user=None)


class Migration(migrations.Migration):

    dependencies = [
        ('profiles', '0004_add_user_onetoone_nullable'),
        migrations.swappable_dependency('accounts.User'),  # Ensure User model is available
    ]

    operations = [
        migrations.RunPython(
            backfill_users_for_profiles,
            reverse_backfill_users_for_profiles
        ),
    ]
