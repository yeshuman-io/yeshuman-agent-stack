# Generated by Django 5.2.5 on 2025-09-12 11:54

import django.contrib.postgres.fields
import django.db.models.deletion
import pgvector.django.vector
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.CharField(db_index=True, max_length=255)),
                ('content', models.TextField(help_text='The actual memory content/text')),
                ('embedding', pgvector.django.vector.VectorField(blank=True, dimensions=1536, null=True)),
                ('memory_type', models.CharField(choices=[('factual', 'Factual - Static information and preferences'), ('episodic', 'Episodic - Time-bound experiences and events'), ('semantic', 'Semantic - Patterns and insights derived from experiences')], db_index=True, default='factual', max_length=20)),
                ('interaction_type', models.CharField(choices=[('conversation', 'Conversation - Direct user communication'), ('observation', 'Observation - System-observed patterns'), ('insight', 'Insight - Derived understanding or connections')], db_index=True, default='conversation', max_length=20)),
                ('category', models.CharField(db_index=True, help_text="General category (e.g., 'health', 'work', 'personal', 'finance')", max_length=50)),
                ('subcategory', models.CharField(blank=True, db_index=True, help_text='Specific subcategory within the main category', max_length=50)),
                ('importance', models.CharField(choices=[('high', 'High priority'), ('medium', 'Medium priority'), ('low', 'Low priority')], db_index=True, default='medium', max_length=10)),
                ('session_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('source', models.CharField(default='mem0_client', max_length=50)),
                ('requires_followup', models.BooleanField(db_index=True, default=False)),
                ('is_archived', models.BooleanField(db_index=True, default=False)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Domain-specific metadata (health_type, tags, etc.)')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user_id', 'memory_type'], name='memories_me_user_id_b245fa_idx'), models.Index(fields=['user_id', 'category'], name='memories_me_user_id_823105_idx'), models.Index(fields=['user_id', 'created_at'], name='memories_me_user_id_2809a2_idx'), models.Index(fields=['user_id', 'importance'], name='memories_me_user_id_3765a7_idx'), models.Index(fields=['session_id', 'created_at'], name='memories_me_session_6e9c01_idx'), models.Index(fields=['category', 'subcategory'], name='memories_me_categor_2875df_idx')],
            },
        ),
        migrations.CreateModel(
            name='MemorySearch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.CharField(db_index=True, max_length=255)),
                ('query', models.TextField()),
                ('query_embedding', pgvector.django.vector.VectorField(blank=True, dimensions=1536, null=True)),
                ('results_count', models.IntegerField(default=0)),
                ('search_duration_ms', models.IntegerField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('search_type', models.CharField(choices=[('semantic', 'Semantic similarity search'), ('keyword', 'Keyword-based search'), ('temporal', 'Time-based search'), ('category', 'Category-based search')], default='semantic', max_length=20)),
                ('clicked_results', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), blank=True, default=list, help_text='Memory IDs that were clicked/used from this search', size=None)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user_id', 'created_at'], name='memories_me_user_id_883d95_idx'), models.Index(fields=['session_id', 'created_at'], name='memories_me_session_000d3d_idx')],
            },
        ),
        migrations.CreateModel(
            name='MemoryPattern',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.CharField(db_index=True, max_length=255)),
                ('pattern_type', models.CharField(db_index=True, help_text='Type of pattern discovered (domain-specific)', max_length=30)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('confidence', models.FloatField(default=0.5, help_text='Pattern confidence score (0.0-1.0)')),
                ('pattern_data', models.JSONField(default=dict, help_text='Structured data about the pattern (frequencies, correlations, etc.)')),
                ('category', models.CharField(blank=True, db_index=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('supporting_memories', models.ManyToManyField(related_name='patterns', to='memories.memory')),
            ],
            options={
                'ordering': ['-confidence', '-last_updated'],
                'indexes': [models.Index(fields=['user_id', 'pattern_type'], name='memories_me_user_id_a66eaf_idx'), models.Index(fields=['user_id', 'confidence'], name='memories_me_user_id_c29469_idx'), models.Index(fields=['is_active', 'confidence'], name='memories_me_is_acti_5cb673_idx'), models.Index(fields=['category', 'pattern_type'], name='memories_me_categor_8e704b_idx')],
            },
        ),
        migrations.CreateModel(
            name='MemoryRelation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('relation_type', models.CharField(choices=[('related', 'Generally related'), ('causes', 'One memory causes another'), ('follows', 'Sequential relationship'), ('contradicts', 'Conflicting information'), ('confirms', 'Confirms or supports'), ('pattern', 'Part of a pattern')], default='related', max_length=20)),
                ('strength', models.FloatField(default=1.0, help_text='Relationship strength (0.0-1.0)')),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_memory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations_from', to='memories.memory')),
                ('to_memory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations_to', to='memories.memory')),
            ],
            options={
                'unique_together': {('from_memory', 'to_memory', 'relation_type')},
            },
        ),
    ]
